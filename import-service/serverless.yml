service: import-service
frameworkVersion: '2'

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1

  environment:
    SQS_URL: '${cf:product-service-${self:provider.stage}.SQSQueueUrl}'

  iamRoleStatements:
    - Effect: 'Allow'
      Action: 's3:ListBucket'
      Resource:
        - 'arn:aws:s3:::macbook-shop-uploaded'
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource:
        - 'arn:aws:s3:::macbook-shop-uploaded/*'
    - Effect: 'Allow'
      Action:
        - 'sqs:*'
      Resource:
        - '${cf:product-service-${self:provider.stage}.SQSQueueArn}'

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http: 
          path: import
          method: get
          cors: true
          authorizer:
            name: tokenAuthorizer
            arn:
              !Join
                - ':'
                - - 'arn:aws:lambda'
                  - !Ref AWS::Region
                  - !Ref AWS::AccountId
                  - 'function:authorization-service-${self:provider.stage}-tokenAuth'
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: macbook-shop-uploaded
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

resources:
  Resources:
    GatewayResponseDenied:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
        ResponseType: ACCESS_DENIED
        RestApiId: !Ref ApiGatewayRestApi
    GatewayResponseUnauthorized:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
        ResponseType: UNAUTHORIZED
        RestApiId: !Ref ApiGatewayRestApi
